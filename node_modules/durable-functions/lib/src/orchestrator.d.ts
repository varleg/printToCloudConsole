import { IOrchestrationFunctionContext } from "./classes";
/** @hidden */
export declare class Orchestrator {
    fn: (context: IOrchestrationFunctionContext) => IterableIterator<unknown>;
    private currentUtcDateTime;
    private customStatus;
    private newGuidCounter;
    private subOrchestratorCounter;
    constructor(fn: (context: IOrchestrationFunctionContext) => IterableIterator<unknown>);
    listen(): (context: IOrchestrationFunctionContext) => Promise<void>;
    private handle;
    private callActivity;
    private callActivityWithRetry;
    private callEntity;
    private callSubOrchestrator;
    private callSubOrchestratorWithRetry;
    private callHttp;
    private continueAsNew;
    private createTimer;
    private getInput;
    private isLocked;
    private lock;
    private cleanEntities;
    private newGuid;
    private setCustomStatus;
    private waitForExternalEvent;
    private all;
    private any;
    private parseHistoryEvent;
    private findEventRaised;
    private findEventSent;
    private findSubOrchestrationInstanceCreated;
    private findSubOrchestrationInstanceCompleted;
    private findSubOrchestrationInstanceFailed;
    private findTaskScheduled;
    private findTaskCompleted;
    private findTaskFailed;
    private findTimerCreated;
    private findTimerFired;
    private setProcessed;
}
